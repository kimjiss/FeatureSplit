컴터 과학에서, 지피유의 사용은 컴터비전 분야에서 엄청난 발전을 가져왔다
cnn에서 발생하는 엄청난 양의 계산량을 효율적으로 처리할수 있게 되면서,
수많은 네트워크들은 convolution 연산을 차용하여 다양한 분야에서 성과를 내었다.
그러나 convolution연산은 아직까지 연산속도면에서 단점을 가지고 있다.
convolution이 많은 불필요한 연산을 수행한다는 가정하에, 우리는 convolution연산의
연산량을 대폭 줄이는 방법을 제안한다. 일부 filter들은 기존의 convolution 방식을 따르고
나머지 filter들은 convolution을 거쳐 나온 feature를 쪼개어 부분적으로 convolution을 한다.

method

어떤 방식으로 convolution layer의 filter들을 이용하는것이 가장 효과적인지 알아내기 위해
여러가지 방법을 시도하였다. 이 방법들이 공통적으로 기반을 두고 있는 것은 feature를 분리하여
filter를 적용한다는 것이다. 

local split
이전 layer에서 넘어온 feature를 원하는 갯수의 부분으로 나눈다. 그리고 우리가 적용하고자 하는 filter들중
일부를 그 나누어진 feature map에 부분적으로 convolution 연산을 수행한다. 예를 들어, 40개의 channel을 가진
feature map을 80개의 filter를 이용하여 convolution하고 싶다고 하자. feature map을 4개의 부분으로 나누면,
각각은 10개의 channel을 가진 부분들이 될 것이다. 이 부분들을 각각 20개의 filter들을 이용하여 convolution
연산을 하면 총 80개의 filter를 사용하게 된다.

shuffle split
local split은 편협적으로 연결되어 있어 feature map들간의 연결이 유기적으로 이루어지지 않으며 이는
complexity에 좋은 영향을 주지 않을 수 있다. 이에 feature map을 고루 가져와 filtering 하는 방법을 제안한다.
이전 feature map 에서 순차적으로 샘플링하여 feature 뭉치에 모아준다. 이렇게 모아진 feature 뭉치들을 local
split에서와 동일한 방식으로 convolution을 수행한다. local split에서는 뒤쪽에서 convolution을 하는 filter
들이 앞쪽에 있는 feature map에 닿지 못하는 반면, shuffle split 방식을 이용하면 filter들이 골고루 feature map
전반에 걸쳐 지나가도록 할 수 있다.
